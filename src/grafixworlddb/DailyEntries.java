/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafixworlddb;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mathew C. Nyirongo
 */
public class DailyEntries extends javax.swing.JFrame {

    /**
     * Creates new form DailyEntries
     */
    public DailyEntries() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Database Entries");
        setAlwaysOnTop(true);
        setPreferredSize(new java.awt.Dimension(700, 400));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(new javax.swing.border.MatteBorder(null));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "S/N", "TOTAL", "DATE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setDragEnabled(true);
        jTable1.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(406, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(381, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void fillDailyTable(){
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/products_and_services?useSSL=false", "Mathews", "encrypted");
            PreparedStatement ps = con.prepareStatement("SELECT * FROM dailyentries");
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                String[][] s = {{Integer.toString(rs.getInt("s_n")), Float.toString(rs.getFloat("total")), rs.getDate("date").toString()}};
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                String[] columnIdentifiers = {"S/N", "TOTAL", "DATE"};
                dtm.setDataVector(s, columnIdentifiers);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DailyEntries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void fillMonthlyTable(){
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/products_and_services?useSSL=false", "Mathews", "encrypted");
            PreparedStatement ps = con.prepareStatement("SELECT * FROM monthlyentries");
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                String[][] s = {{Integer.toString(rs.getInt("s_n")), Float.toString(rs.getFloat("total")), rs.getDate("date").toString()}};
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                String[] columnIdentifiers = {"S/N", "TOTAL", "DATE"};
                dtm.setDataVector(s, columnIdentifiers);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DailyEntries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void fillYearlyTable(){
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/products_and_services?useSSL=false", "Mathews", "encrypted");
            PreparedStatement ps = con.prepareStatement("SELECT * FROM yearlyentries");
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                String[][] s = {{Integer.toString(rs.getInt("s_n")), Float.toString(rs.getFloat("total")), rs.getDate("date").toString()}};
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                String[] columnIdentifiers = {"S/N", "TOTAL", "DATE"};
                dtm.setDataVector(s, columnIdentifiers);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DailyEntries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DailyEntries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DailyEntries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DailyEntries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DailyEntries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DailyEntries().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
