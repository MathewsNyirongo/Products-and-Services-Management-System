/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafixworlddb;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Mathews C. Nyirongo
 */
public class ProductsAndServices extends javax.swing.JFrame {

    /**
     * Creates new form ProductsAndServices
     */
    public ProductsAndServices() {
        initComponents();
        fillItems();
    }
    
    public void setTotal(float newTotal){
        total = newTotal;
    }
    
    public float getTotal(){
        return total;
    }
    
    public void setDailyTotal(float newDailyTotal){
        dailyTotal = newDailyTotal;
    }
    
    public float getDailyTotal(){
        return dailyTotal;
    }
    
    public void setMonthlyTotal(float newMonthlyTotal){
        monthlyTotal = newMonthlyTotal;
    }
    
    public float getMonthlyTotal(){
        return monthlyTotal;
    }
    
    public void setPC(float newPC){
        pc = newPC;
    }
    
    public float getPC(){
        return pc;
    }
    
    public void setPr(float newPrint){
        print = newPrint;
    }
    
    public float getPr(){
        return print;
    }
    
    public void setFr(float newFridge){
        fridge = newFridge;
    }
    
    public float getFr(){
        return fridge;
    }
    
    public void setSc(float newScan){
        scan = newScan;
    }
    
    public float getSc(){
        return scan;
    }
    
    public void setPSP(float newPSP){
        psp = newPSP;
    }
    
    public float getPSP(){
        return psp;
    }
    
    public void setPen(float newPen){
        pen = newPen;
    }
    
    public float getPen(){
        return pen;
    }
    
    public void set543(float tt){
        tt543 = tt;
    }
    
    public float get543(){
        return tt543;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        selectedItem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        result = new javax.swing.JTextField();
        closeToday = new javax.swing.JButton();
        copyButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        user = new javax.swing.JLabel();
        saveToDB = new javax.swing.JButton();
        price = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        productsAndServices = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        viewMonthlyEntries = new javax.swing.JButton();
        closeThisYear = new javax.swing.JButton();
        closeThisMonth = new javax.swing.JButton();
        viewDailyEntries = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grafix Products And Services");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Products/Services");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        selectedItem.setEditable(false);
        selectedItem.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        selectedItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedItemActionPerformed(evt);
            }
        });
        getContentPane().add(selectedItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 360, 50));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("=");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 290, 40, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("QTY");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 240, 30, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("X");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 290, 20, 40));

        result.setEditable(false);
        result.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        result.setToolTipText("result appers here");
        getContentPane().add(result, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 280, 80, 60));

        closeToday.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        closeToday.setText("CLOSE TODAY");
        closeToday.setToolTipText("Close today's sales");
        closeToday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeTodayActionPerformed(evt);
            }
        });
        getContentPane().add(closeToday, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 160, 50));

        copyButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        copyButton.setText("ENTER>>");
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });
        getContentPane().add(copyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 120, 50));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Username : ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 110, 20));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafixworlddb/images/logo.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 290, 190));

        user.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        user.setText(login.getUserName());
        getContentPane().add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 180, 20));

        saveToDB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        saveToDB.setText("ADD ENTRY");
        saveToDB.setToolTipText("Add entry to database");
        saveToDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToDBActionPerformed(evt);
            }
        });
        getContentPane().add(saveToDB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 140, 50));

        price.setEditable(false);
        price.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        price.setText("0.00");
        price.setToolTipText("enter price here");
        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });
        getContentPane().add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, 60, 60));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("PRICE");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, 80, 30));

        productsAndServices.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select product/Service" }));
        getContentPane().add(productsAndServices, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 230, 50));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("TOTAL");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 237, 70, 30));

        qty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        qty.setText("1");
        getContentPane().add(qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 280, 60, 60));

        jLabel10.setFont(new java.awt.Font("Stencil", 2, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 204));
        jLabel10.setText("SYSTEM");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 250, 80));

        jLabel11.setFont(new java.awt.Font("Stencil", 2, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 204));
        jLabel11.setText("GRAFIX PRODUCTS AND");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 440, 80));

        jLabel12.setFont(new java.awt.Font("Stencil", 2, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 204));
        jLabel12.setText("SERVICES MANAGEMENT");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 440, 80));

        viewMonthlyEntries.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        viewMonthlyEntries.setText("VIEW MONTHLY ENTRIES");
        viewMonthlyEntries.setToolTipText("Go to database");
        viewMonthlyEntries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMonthlyEntriesActionPerformed(evt);
            }
        });
        getContentPane().add(viewMonthlyEntries, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 470, 240, 60));

        closeThisYear.setBackground(new java.awt.Color(255, 0, 51));
        closeThisYear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        closeThisYear.setText("CLOSE THIS YEAR");
        closeThisYear.setToolTipText("Happy new year!");
        closeThisYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeThisYearActionPerformed(evt);
            }
        });
        getContentPane().add(closeThisYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 230, 60));

        closeThisMonth.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        closeThisMonth.setText("CLOSE THIS MONTH");
        closeThisMonth.setToolTipText("Month-end");
        closeThisMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeThisMonthActionPerformed(evt);
            }
        });
        getContentPane().add(closeThisMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 390, 220, 50));

        viewDailyEntries.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        viewDailyEntries.setText("VIEW DAILY ENTRIES");
        viewDailyEntries.setToolTipText("Go to database");
        viewDailyEntries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDailyEntriesActionPerformed(evt);
            }
        });
        getContentPane().add(viewDailyEntries, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 470, 220, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectedItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectedItemActionPerformed

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        String item = productsAndServices.getSelectedItem().toString();
        selectedItem.setText(item);
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/products_and_services?useSSL=false", "Mathews", "encrypted");
            ps = connection.prepareStatement("SELECT price FROM prices WHERE product_service='"+item+"'");
             rs = ps.executeQuery();
            if(rs.next()){
                try{
                    String convFloat = Float.toString(rs.getFloat("price"));
                    price.setText(convFloat);
                    float newTotal = rs.getFloat("price") * Integer.parseInt(qty.getText());
                    setTotal(newTotal);
                    String convTotal = Float.toString(getTotal());
                    result.setText(convTotal);
                }catch(NumberFormatException | SQLException e){
                    JOptionPane.showMessageDialog(this, "Invalid input", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Invalid input", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex, "SQL error", JOptionPane.ERROR_MESSAGE);
        }
        finally{
            try {
                rs.close();
                ps.close();
                connection.close();
            } catch (SQLException ex) {
                Logger.getLogger(ProductsAndServices.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_copyButtonActionPerformed

    private void saveToDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToDBActionPerformed
        // TODO add your handling code here:
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/products_and_services?useSSL=false", "Mathews", "encrypted");
            ps = connection.prepareStatement("INSERT INTO products_and_services(product_service,price,quantity,total,date) VALUES(?,?,?,?,?)");
            float convPrice = Float.parseFloat(price.getText());
            int convQTY = Integer.parseInt(qty.getText());
            float convTotal = Float.parseFloat(result.getText());
            ps.setString(1, selectedItem.getText());
            ps.setFloat(2, convPrice);
            ps.setInt(3, convQTY);
            ps.setFloat(4, convTotal);
            ps.setObject(5, jDate);
            ps.execute();
            JOptionPane.showMessageDialog(this, "Saved");
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, "Failed!", "Failed", JOptionPane.ERROR_MESSAGE);
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Unknown error!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        finally{
            try {
                ps.close();
                connection.close();
            } catch (SQLException ex) {
                Logger.getLogger(ProductsAndServices.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_saveToDBActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void closeTodayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeTodayActionPerformed
        int x;
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/products_and_services?useSSL=false", "Mathews", "encrypted");
            ps = connection.prepareStatement("SELECT sum(total) AS total FROM products_and_services WHERE date='"+todaysDate+"'");
            rs = ps.executeQuery();
            
            ps = connection.prepareStatement("SELECT SUM(total) as Photocopying FROM products_and_services WHERE product_service LIKE '%photocopy%' AND date='"+todaysDate+"'");
            ResultSet photocopyRS = ps.executeQuery();
            ps = connection.prepareStatement("SELECT SUM(total) as Printing FROM products_and_services WHERE product_service LIKE '%print%' AND date='"+todaysDate+"'");
            ResultSet printRS = ps.executeQuery();
            
            ps = connection.prepareStatement("SELECT SUM(total) as Fridge FROM products_and_services WHERE product_service='Mirinda' AND date='"
                    +todaysDate+"' OR product_service='Fanta' AND date='"+todaysDate+"'OR product_service='Coca cola' AND date='"+todaysDate+"' OR "
                    + "product_service='Water' AND date='"+todaysDate+"' OR product_service='Fruitree' AND date='"+todaysDate+"' OR product_service='Embe'"
                    + " AND date='"+todaysDate+"' OR product_service='Spaletta' AND date='"+todaysDate+"' OR product_service='Pepsi' AND date='"+todaysDate+"'");
            ResultSet fridgeRS = ps.executeQuery();
            
            ps = connection.prepareStatement("SELECT SUM(total) AS ScaBiLam FROM products_and_services WHERE product_service='Scanning' AND date"
                    + "='"+todaysDate+"' OR product_service='Binding' AND date='"+todaysDate+"' OR product_service='Laminating' AND date='"+todaysDate+"'");
            ResultSet scanRs = ps.executeQuery();
            
            ps = connection.prepareStatement("SELECT SUM(total) AS IntPSP FROM products_and_services WHERE product_service='Internet' AND date"
                    + "='"+todaysDate+"' OR product_service LIKE '%assport%' AND date='"+todaysDate+"'");
            ResultSet pspRs = ps.executeQuery();
            
            ps = connection.prepareStatement("SELECT SUM(total) AS PensAndEnv FROM products_and_services WHERE product_service LIKE '%pen%'"
                    + "AND date='"+todaysDate+"' OR product_service LIKE '%envelope%' AND date='"+todaysDate+"'");
            ResultSet penRs = ps.executeQuery();
            
            ps = connection.prepareStatement("SELECT SUM(total) AS r543 FROM products_and_services WHERE product_service='543' AND date='"+todaysDate+"'");
            ResultSet ttRs = ps.executeQuery();

            while(rs.next() && photocopyRS.next() && printRS.next() && fridgeRS.next() && scanRs.next() && pspRs.next() && penRs.next() && ttRs.next()){
                setTotal(rs.getFloat("total"));
                setPC(photocopyRS.getFloat("Photocopying"));
                setPr(printRS.getFloat("Printing"));
                setFr(fridgeRS.getFloat("Fridge"));
                setSc(scanRs.getFloat("ScaBiLam"));
                setPSP(pspRs.getFloat("IntPSP"));
                setPen(penRs.getFloat("PensAndEnv"));
                set543(ttRs.getFloat("r543"));
            }
            PreparedStatement ps2 = connection.prepareStatement("INSERT INTO dailyEntries(total, date) VALUES(?,?)");
            ps2.setFloat(1, getTotal());
            ps2.setObject(2, todaysDate);
            ps2.execute();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "You are only allowed to close once a day. Your changes may not be saved.\nContact the application programmer for further assistance.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        
        x = JOptionPane.showConfirmDialog(this, "Do you really want to close today's sales?");
        if(x == 0){
            /*String message = String.format("Today's date : "+todaysDate+"\nPhotocopying : K%,.2f K%,.2f\nFridge : K%,.2f\nScan/Bind/Laminate : "
                    + "K%,.2f\nInternet/PSP : K%,.2f\nPens And Envelopes : K%,.2f\n543 : K%,.2f\nToday's total : K%,.2f\n",
                    getPC(), , getFr(), getSc(), getPSP(),getPen(), get543(), getTotal() );*/
            String s1 = "Today's Date : "+todaysDate;
            String s2 = String.format("\nPhotocopying : K%,.2f ", getPC());
            String s3 = String.format("\nPrinting : K%,.2f", getPr());
            String s4 = String.format("\nFridge : K%,.2f", getFr());
            String s5 = String.format("\nScan/Bind/Laminate : K%,.2f", getSc());
            String s6 = String.format("\nInternet/PSP : K%,.2f", getPSP());
            String s7 = String.format("\nPens and Envenlopes : K%,.2f", getPen());
            String s8 = String.format("\n543 : K%,.2f", get543());
            String s9 = String.format("\nTotal : K%,.2f",getTotal());
            String title = "GRAFIX WORLD : "+todaysDate+" CLOSING RECEIPT";
            String conc = s1.concat(s2).concat(s3).concat(s4).concat(s5).concat(s6).concat(s7).concat(s8).concat(s9);
            JOptionPane.showMessageDialog(this, conc, "Today's Closing", JOptionPane.INFORMATION_MESSAGE);
            PrinterJob job = PrinterJob.getPrinterJob();
            job.setPrintable( new Printable(){
                @Override
                public int print(Graphics g, PageFormat pf, int page) throws PrinterException {
                    if(page>0){
                        return NO_SUCH_PAGE;
                    }
                    Graphics2D g2d = (Graphics2D) g;
                    g2d.translate(pf.getImageableX(), pf.getImageableY());
                    g.drawString(title, 180, 100);
                    g.drawString(s1, 100, 150);
                    g.drawString(s2, 100, 200);
                    g.drawString(s3, 100, 250);
                    g.drawString(s4, 100, 300);
                    g.drawString(s5, 100, 350);
                    g.drawString(s6, 100, 400);
                    g.drawString(s7, 100, 450);
                    g.drawString(s8, 100, 500);
                    g.drawString(s9, 100, 550);
                    return PAGE_EXISTS;
                }
            });
            boolean ok = job.printDialog();
            if(ok){
                try {
                    job.print();
                } catch (PrinterException ex) {
                    JOptionPane.showMessageDialog(this, "Failed to print receipt!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Receipt not printed.", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_closeTodayActionPerformed

    private void closeThisMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeThisMonthActionPerformed
        
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/products_and_services?useSSL=false", "Mathews", "encrypted");
            ps = connection.prepareStatement("SELECT sum(total) as total FROM dailyEntries");
            rs = ps.executeQuery();
            while(rs.next()){
                setDailyTotal(rs.getFloat("total"));
            }
            PreparedStatement ps2 = connection.prepareStatement("INSERT INTO monthlyEntries(total, date) VALUES(?,?)");
            ps2.setFloat(1, getDailyTotal());
            ps2.setObject(2, todaysDate);
            ps2.execute();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "You are only allowed to close once a month. Your changes may not have been saved.\nContact the application programmer for further assistance.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        int x;
        x = JOptionPane.showConfirmDialog(this, "Do you really want to close this month's sales?");
        if(x == 0){
            String message = String.format("Today's date : "+todaysDate+"\nThis month's total : K%.2f", getDailyTotal());
            JOptionPane.showMessageDialog(this, message, "This month's Closing", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_closeThisMonthActionPerformed

    private void closeThisYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeThisYearActionPerformed
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/products_and_services?useSSL=false", "Mathews", "encrypted");
            ps = connection.prepareStatement("SELECT sum(total) as total FROM monthlyEntries");
            rs = ps.executeQuery();
            while(rs.next()){
                setMonthlyTotal(rs.getFloat("total"));
            }
            int x;
            x = JOptionPane.showConfirmDialog(this, "Do you really want to close this year's sales?");
            if(x == 0){
                String message = String.format("Today's date : "+todaysDate+"\nThis yaer's total : K%.2f", getMonthlyTotal());
                JOptionPane.showMessageDialog(this, message, "This year's Closing", JOptionPane.INFORMATION_MESSAGE);
            }
            PreparedStatement ps2 = connection.prepareStatement("INSERT INTO yearlyEntries(total, date) VALUES(?,?)");
            ps2.setFloat(1, getMonthlyTotal());
            ps2.setObject(2, todaysDate);
            ps2.execute();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "You are only allowed to close once a year. Your changes may not have been saved.\nContact the application programmer for further assistance.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_closeThisYearActionPerformed

    private void viewDailyEntriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDailyEntriesActionPerformed
        de.setVisible(true);
        de.fillDailyTable();
    }//GEN-LAST:event_viewDailyEntriesActionPerformed

    private void viewMonthlyEntriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMonthlyEntriesActionPerformed
        de.setVisible(true);
        de.fillMonthlyTable();
    }//GEN-LAST:event_viewMonthlyEntriesActionPerformed

    public String selectedItem(){
        return selectedItem.getText();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductsAndServices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductsAndServices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductsAndServices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductsAndServices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ProductsAndServices().setVisible(true);
        });
    }
    
    public void fillItems(){
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/products_and_services?useSSL=false", "Mathews", "encrypted");
            ps = connection.prepareStatement("SELECT product_service FROM prices ORDER BY product_service");
                rs = ps.executeQuery();
                ResultSetMetaData metaData = rs.getMetaData();
                int numberOfColumns = metaData.getColumnCount();
                while(rs.next()){
                    String items = rs.getString("product_service");
                    productsAndServices.addItem(items);
                }
        } catch (SQLException ex) {
            Logger.getLogger(ProductsAndServices.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
               try {
                   rs.close();
                   ps.close();
                   connection.close();
               } catch (SQLException ex) {
                   Logger.getLogger(ProductsAndServices.class.getName()).log(Level.SEVERE, null, ex);
               }
        }
    }
    
    private final DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    private final Date jDate = new Date();
    private final String todaysDate = dateFormat.format(jDate);
    private ResultSet rs;
    private Connection connection;
    private PreparedStatement ps;
    ResultSetMetaData md;
    DailyEntries de = new DailyEntries();
    private final Login login = new Login();
    private float total;
    private float dailyTotal;
    private float monthlyTotal;
    private float pc;
    private float print;
    private float fridge;
    private float scan;
    private float psp;
    private float pen;
    private float tt543;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeThisMonth;
    private javax.swing.JButton closeThisYear;
    private javax.swing.JButton closeToday;
    private javax.swing.JButton copyButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField price;
    private javax.swing.JComboBox<String> productsAndServices;
    private javax.swing.JTextField qty;
    private javax.swing.JTextField result;
    private javax.swing.JButton saveToDB;
    private javax.swing.JTextField selectedItem;
    private javax.swing.JLabel user;
    private javax.swing.JButton viewDailyEntries;
    private javax.swing.JButton viewMonthlyEntries;
    // End of variables declaration//GEN-END:variables
}
